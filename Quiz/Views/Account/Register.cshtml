@model UserRegistrationViewModel

@{
    var role = Model.Role;
}

<h2>Register</h2>

<form asp-action="Register" method="post">
    <div class="form-group">
        <label asp-for="Role">Role</label>
        <select asp-for="Role" asp-items="Html.GetEnumSelectList<UserRole>()" class="form-control"></select>
    </div>

    @if (role == "Student")
    {
        <partial name="_StudentRegistrationPartial" model="Model" />
    }
    else if (role == "Teacher")
    {
        <partial name="_TeacherRegistrationPartial" model="Model" />
    }
    else if (role == "Admin")
    {
        <partial name="_AdminRegistrationPartial" model="Model" />
    }

    <button type="submit" class="btn btn-primary">Register</button>
</form>


@* @using Authentication.Models
@using Lesson.Models
@using Microsoft.AspNetCore.Mvc.Rendering

@model Authentication.Models.User

<!-- Include Bootstrap CSS if not already included -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

<div class="container">
    <h2>Register</h2>
    <ul class="nav nav-tabs" id="registrationTabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="student-tab" data-toggle="tab" href="#student" role="tab" aria-controls="student" aria-selected="true">Student</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="teacher-tab" data-toggle="tab" href="#teacher" role="tab" aria-controls="teacher" aria-selected="false">Teacher</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="admin-tab" data-toggle="tab" href="#admin" role="tab" aria-controls="admin" aria-selected="false">Admin</a>
        </li>
    </ul>
    <div class="tab-content" id="registrationTabsContent">
        <!-- Student Tab -->
        <div class="tab-pane fade show active" id="student" role="tabpanel" aria-labelledby="student-tab">
            <form asp-action="Register" method="post">
                <input type="hidden" name="Role" value="Student" />

                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PasswordHash" class="control-label"></label>
                    <input asp-for="PasswordHash" type="password" class="form-control" />
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="FacultyId">Faculty</label>
                    <select id="FacultyId" name="FacultyId" class="form-control">
                        <option value="">Select Faculty</option>
                        @if (ViewData["Faculties"] is List<Faculty> faculties && faculties.Any())
                        {
                            foreach (var faculty in faculties)
                            {
                                <option value="@faculty.Id">@faculty.Name</option>
                            }
                        }
                        else
                        {
                            <option>No faculties available.</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="EducationType">Education Type</label>
                    <select id="EducationType" name="EducationType" class="form-control">
                        <option value="">Select Education Type</option>
                        <option value="Bachelor">Bachelor</option>
                        <option value="Master">Master</option>
                        <option value="Doctorate">Doctorate</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="SpecializationId">Specialization</label>
                    <select id="SpecializationId" name="SpecializationId" class="form-control">
                        <option value="">Select Specialization</option>
                        <!-- Options will be populated via JavaScript -->
                    </select>
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
            </form>
        </div>

        <!-- Teacher Tab -->
        <div class="tab-pane fade" id="teacher" role="tabpanel" aria-labelledby="teacher-tab">
            <form asp-action="Register" method="post">
                <input type="hidden" name="Role" value="Teacher" />

                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PasswordHash" class="control-label"></label>
                    <input asp-for="PasswordHash" type="password" class="form-control" />
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="DepartmentId">Department</label>
                    <select id="DepartmentId" name="DepartmentId" class="form-control">
                        <option value="">Select Department</option>
                        <!-- Options will be populated via JavaScript -->
                    </select>
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
            </form>
        </div>


        <!-- Admin Tab -->
        <div class="tab-pane fade" id="admin" role="tabpanel" aria-labelledby="admin-tab">
            <form asp-action="Register" method="post">
                <input type="hidden" name="Role" value="Admin" />

                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PasswordHash" class="control-label"></label>
                    <input asp-for="PasswordHash" type="password" class="form-control" />
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
            </form>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            // Function to populate the Specialization dropdown
            function populateSpecializations(facultyId, educationType) {
                $.getJSON('@Url.Action("GetSpecializations", "Account")', { facultyId: facultyId, educationType: educationType })
                    .done(function (data) {
                        var specializationSelect = $('#SpecializationId');
                        specializationSelect.empty(); // Clear the dropdown

                        if (data && data.specializations && data.specializations.length > 0) {
                            // Populate the dropdown with the returned specializations
                            specializationSelect.append($('<option>').text('Select Specialization').attr('disabled', true).attr('selected', true));
                            $.each(data.specializations, function (index, item) {
                                specializationSelect.append($('<option>').text(item.name).attr('value', item.id));
                            });
                        } else {
                            // No specializations found
                            specializationSelect.append($('<option>').text('No specializations available').attr('disabled', true));
                        }
                    })
                    .fail(function () {
                        console.error("Error fetching specializations.");
                        $('#SpecializationId').empty().append($('<option>').text('Error loading specializations').attr('disabled', true));
                    });
            }

            // Event handler for changes in FacultyId and EducationType dropdowns
            $('#FacultyId, #EducationType').change(function () {
                var facultyId = $('#FacultyId').val();
                var educationType = $('#EducationType').val();

                if (facultyId && educationType) {
                    populateSpecializations(facultyId, educationType);
                } else {
                    // Clear the specialization dropdown if no faculty or education type is selected
                    $('#SpecializationId').empty().append($('<option>').text('Select Specialization').attr('disabled', true).attr('selected', true));
                }
            });
        });

        $(document).ready(function () {
            // Function to populate the Department dropdown
            function populateDepartments() {
                $.getJSON('@Url.Action("GetDepartments", "Account")')
                    .done(function (data) {
                        var departmentSelect = $('#DepartmentId');
                        departmentSelect.empty(); // Clear the dropdown

                        if (data && data.departments && data.departments.length > 0) {
                            departmentSelect.append($('<option>').text('Select Department').attr('disabled', true).attr('selected', true));
                            $.each(data.departments, function (index, item) {
                                departmentSelect.append($('<option>').text(item.name).attr('value', item.id));
                            });
                        } else {
                            departmentSelect.append($('<option>').text('No departments available').attr('disabled', true));
                        }
                    })
                    .fail(function () {
                        console.error("Error fetching departments.");
                        $('#DepartmentId').empty().append($('<option>').text('Error loading departments').attr('disabled', true));
                    });
            }

            // Call the function to populate departments when the page loads
            populateDepartments();
        });
    </script>
}

 *@